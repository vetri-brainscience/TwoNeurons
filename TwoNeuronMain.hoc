load_file("stdrun.hoc")
create somaA
somaA insert hh
somaA {
  diam = 22
  L = 37
  Ra = 100
}

create somaB
  somaB insert hh
somaB {
  diam = 22
  L = 37
  Ra = 100
}
access somaB
objref synapseAB
synapseAB = new Exp2Syn(0.5)
synapseAB.tau1 = 1  //ms rise time
synapseAB.tau2 = 2  //ms decay time
synapseAB.e = 0  //mV reversal potential

access somaA
objref connectionAB
thresh = 0
delay = 0
weight = 1
connectionAB = new NetCon(&somaA.v(0.5), synapseAB, thresh, delay, weight)

access somaA
objref spikesource
spikesource = new NetStim(0.5)     //Location arbitrary
spikesource.interval = 60          //ms (mean) time between spikes
spikesource.number = 100           //(average) number of spikes
spikesource.start = 0              //ms (mean) start time of the first spike
spikesource.noise = 0              //range 0 to 1. Fractional randomnesss
									//0 deterministic, 1 intervals have dcaying exp. distribution
objref synapse                                  
synapse = new Exp2Syn(0.5)
synapse.tau1 = 1   // ms rise time
synapse.tau2 = 2   // ms decay time
synapse.e = 0      //mV reversal potential

objref connection
thresh = 0
delay = 0
weight = 1.
connection = new NetCon(spikesource, synapse, thresh, delay, weight)
printf("SomaA. synapse.tau1 = %g\n", synapse.tau1)
printf("SomaB. synapseAB.tau1 = %g\n", synapseAB.tau1)
// recording membrane voltage
objref vvecA, vvecB, tvec, condA, condAB, iA, iAB
tvec = new Vector()
tvec.record(&t)
vvecA = new Vector()
vvecA.record(&somaA.v(0.5))
vvecB = new Vector()
vvecB.record(&somaB.v(0.5))

condA = new Vector()
condAB = new Vector()
iA = new Vector()
iAB = new Vector()
condA.record(&synapse.g)
iA.record(&synapse.i)
condAB.record(&synapseAB.g)
iAB.record(&synapseAB.i)
dttime  = .1   //ms
numsteps = 1/dttime
tstop = 500  //ms
{load_file("TwoNeurons.ses")}
{printf("888888888888888888888\n")}
{run()}
{printf("999999999999999999999\n")}
load_file("TwoNeurons_Record.hoc")
{printf("\n")}
{printf("condA.size() = %d\n", condA.size())}
{printf("condAB.size() = %d\n", condAB.size())}
